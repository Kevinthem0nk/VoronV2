
[gcode_macro high_center]
gcode:
	G90
	G1 X167. Y175. Z200. F30000
	
[gcode_macro center]
gcode:
	G90
	G1 X167. Y175. F30000
	
[gcode_macro low_center]
gcode:
	G90
	G1 X167. Y175. Z50. F30000
	
[gcode_macro front_center]
gcode:
	G90
	G1 X167. Y20. Z100. F30000
	

[gcode_macro back_center]
gcode:
	G90
	G1 X167. Y300. F30000


[gcode_macro G32]
gcode:
	STATUS_HOMING
	M118 Home and QGL Macro Called
    BED_MESH_CLEAR
	M118 Mesh Cleared, Homing (1/2)
    G28
	M118 Homing Complete
	M118 QGL Start
	STATUS_LEVELING
    QUAD_GANTRY_LEVEL
	M118 QGL Complete Re-Homing (2/2)
    G28
	STATUS_READY


[gcode_macro BED_MESH_LOAD]
description: Load an existing mesh or generate a new one
gcode:
	{% if "default" in printer['bed_mesh'].profiles %}
        M118 Loading Existing Mesh
		BED_MESH_CLEAR
        BED_MESH_PROFILE LOAD=default
		M118 Loaded Existing Mesh
    {% else %}
        BED_MESH_NEW
    {% endif %}


[gcode_macro BED_MESH_NEW]
description: Create new bed mesh and save
gcode:
	STATUS_MESHING

	{% if "default" in printer['bed_mesh'].profiles %}
        M118 Old Mesh exist, DIE diE dieEE
		BED_MESH_CLEAR
		clear_mesh
		M118 Mesh has been Deaded, back to normal now.
	{% endif %}

	M118 Creating New Mesh
	SET_VELOCITY_LIMIT ACCEL=15000 ACCEL_TO_DECEL=12500 SQUARE_CORNER_VELOCITY=5		#set for mesh
	ATTACH_PROBE																		#get probe
	BED_MESH_CALIBRATE METHOD=automatic
	DOCK_PROBE																			#put probe
	M118 Mesh Completed


[gcode_macro clear_mesh]
description: Clear the Bed Mesh and Delete Saved Mesh
gcode:
	M118 Mesh Clear command init.
	BED_MESH_CLEAR
	BED_MESH_PROFILE REMOVE=default
	M118 Mesh Cleared


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
	# Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotend = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
	
	# Heat Bed and Wait if not heating chamber
	
	STATUS_HEATING
	M140 S{bedtemp}
	M118 Bed temp set to {bedtemp}C
	M118 Homing and Positioning Head for Heating.
	G28
	front_center
	M118 Waiting for bed temperature.
    M190 S{bedtemp}
	M118 Bed target temp of {bedtemp}C reached
	
	{% if chambertemp==0 and not bedtemp==0 %}
		M118 Chamber not heating, Waiting 2 minutes for bed to normalize
		STATUS_BUSY
		G4 P30000
		M118 Thirty second mark
		G4 P30000
		M118 One minute mark
		G4 P30000
		M118 One and a half minutes
		G4 P30000
		M118 Two minutes reached proceeding, Starting G32
	{% elif chambertemp==0 and bedtemp==0 %}
		M118 bed and chamber == 0, proceeding	
	{% elif chambertemp > 0 %}
		M118 Checking if chamber needs to be preheated
		{% set CurrentChamberTMP = printer['temperature_sensor chamber'].temperature %}
		{% if CurrentChamberTMP <= ( chambertemp-5 ) %}
			M118 Chamber will be pre-heated & Mesh Cleared
			STATUS_HEATING
			M118 Heating Up Chamber, Part Fan 100% 
			M106 S255	
			M118 Waiting for Chamber to reach {chambertemp}C
			TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}
			clear_mesh
			M118 Chamber Temp of {chambertemp}C Reached, Starting G32
			M106 S50
		{% elif CurrentChamberTMP >= chambertemp %}
			M118 Chamber Temp of {chambertemp}C already Reached, skipping heat soak
		{% endif %}
    {% endif %}
	
	# Home and QGL
    G32
#	M118 Re-Home Complete, Moving to Heat Soak Position
#	G0 X168 Y175 Z30 F10000
	M118 G32 Complete, Nozzle Pre-Heating

    # Set nozzle to preheat temperature
	STATUS_HEATING
    M104 S180							#hotend-80			#pre-heat

	# Load bed mesh or creat a new one 
	BED_MESH_LOAD
    
	#Clean Nozzle
	clean_nozzle
	CALIBRATE_Z
	M118 Calibrate Z Complete, Final Heating Nozzle
	
	# Set and wait for nozzle to reach temperature
	STATUS_HEATING
	M118 Hotend target temp of {hotend}C set
    M109 S{hotend}
	M118 Hotend target temp of {hotend}C reached, Cleaning Nozzle
    
    # Clean nozzle and start print 
	clean_nozzle
	M118 Starting Print
	STATUS_PRINTING
	G0 X175 Y175 Z20. F20000
	
   

[delayed_gcode dly_clear_mesh]
initial_duration: 0
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		clear_mesh
		UPDATE_DELAYED_GCODE ID=dly_clear_mesh DURATION=0
    {% else %}
		UPDATE_DELAYED_GCODE ID=dly_clear_mesh DURATION=30
	{% endif %}

[gcode_macro mesh_clr_loop_start]
gcode:
	UPDATE_DELAYED_GCODE ID=dly_clear_mesh DURATION=30


[gcode_macro mesh_clr_loop_stop]
gcode:
	UPDATE_DELAYED_GCODE ID=dly_clear_mesh DURATION=0


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 25, th.axis_maximum.z]|min %}
	{% set bedTar = printer['heater_bed'].target %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                            			; wait for buffer to clear
    G90                             			; absolute positioning
	G92 E0                          			; zero the extruder
    G1 E-2.0 F5000                 				; retract filament   
    G0 Y300 Z{z_safe} F15000   					; move nozzle to remove stringing --- removed X300 for ffc issue

    ; Bed Temp Change Logic
	{% if bedTar >= 100 %}
		M140 S90 
	{% elif bedTar < 100 and bedTar > 60 %}
		M140 S60
	{% elif bedTar <= 60 %}
		M140 S0
	{% endif %}

    M109 S200         							; lower nozzle temp before retraction
    G92 E0                          			; zero the extruder
    G1 E-15.0 F3600                 			; retract filament   
#	TURN_OFF_HEATERS                			; omitted for more control
    M104 S0                         			; turn off nozzle
    M107                            			; turn off fan
    
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
	mesh_clr_loop_start									; starts loops for clearing mesh on XYZ no home. 
	STATUS_READY
	
		
[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    M118 Z-Calibration..
    SET_GCODE_OFFSET Z=0
    BASE_CALIBRATE_Z
    M118 Z-Calibration Finished


# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}
	
[gcode_macro TURN_ON_MOTORS]
gcode:
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
	SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1	
	SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
  
[gcode_macro TURN_OFF_MOTORS]
gcode:
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=0	
	SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0